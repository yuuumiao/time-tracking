{"version":3,"sources":["components/NavMain.jsx","api/apiHandler.js","components/StateProvider.js","components/Loading.jsx","components/helpers.js","components/Timer.jsx","components/TimerForm.jsx","components/EditableTimer.jsx","components/ToggleableTimerForm.jsx","components/EditableTimerList.jsx","components/TimersDashboard.jsx","pages/Home.jsx","App.js","reportWebVitals.js","index.js"],"names":["NavMain","className","Component","service","axios","create","baseURL","withCredentials","errorHandler","error","response","console","log","data","message","apiHandler","getAllTimers","get","then","res","catch","createOneTimer","timer","post","updateOneTimer","id","patch","deleteOneTimer","delete","StateContext","React","createContext","StateProvider","state","timers","isLoading","createTimer","setState","updateTimer","infos","map","Object","assign","title","project","removeTimer","timerId","filter","t","startTimer","now","Date","runningSince","modifiedTimer","x","elapsed","stopTimer","lastElapsed","contextValue","this","Provider","value","props","children","Loading","pad","numberString","size","padded","length","renderElapsedString","totalElapsed","ms","seconds","Math","floor","minutes","hours","toString","join","millisecondsToReadable","Timer","forceUpdateInterval","setInterval","forceUpdate","clearInterval","elapsedString","onClick","openForm","context","Button","variant","contextType","TimerForm","handleChange","e","key","target","name","handleSubmitTimerForm","submitText","closeForm","closeToggleableForm","handleCancelTimerForm","TextField","type","onChange","label","color","EditableTimer","editFormOpen","ToggleableTimerForm","isOpen","openToggleableForm","EditableTimerList","onFormSubmit","TimersDashboard","handleEditFormSubmit","Home","App","exact","path","component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.757dfcd2.chunk.js","sourcesContent":["import React, { Component } from \"react\";\nimport \"../styles/style.scss\";\n\nexport class NavMain extends Component {\n  render() {\n    return (\n      <div className=\"NavMain\">\n        <h1 className=\"NavMain__header\">Timers</h1>\n      </div>\n    );\n  }\n}\n\nexport default NavMain;\n","import axios from \"axios\";\n\nconst service = axios.create({\n  baseURL:\n    \"https://my-json-server.typicode.com/yuuumiao/time-tracking-json-server\",\n  //process.env.REACT_APP_BACKEND_URL\n  withCredentials: true,\n});\n\nfunction errorHandler(error) {\n  if (error.response) {\n    console.log(error.response.data.message);\n    throw error.response.data;\n  }\n  throw error;\n}\n\nconst apiHandler = {\n  service,\n\n  getAllTimers() {\n    return service\n      .get(\"/timers\")\n      .then((res) => res.data)\n      .catch(errorHandler);\n  },\n\n  createOneTimer(timer) {\n    return service\n      .post(\"/timers\", timer)\n      .then((res) => res.data)\n      .catch(errorHandler);\n  },\n\n  updateOneTimer(id, timer) {\n    return service\n      .patch(`/timers/${id}`, timer)\n      .then((res) => res.data)\n      .catch(errorHandler);\n  },\n\n  deleteOneTimer(id) {\n    return service\n      .delete(`/timers/${id}`)\n      .then((res) => res.data)\n      .catch(errorHandler);\n  },\n};\n\nexport default apiHandler;\n","import React from \"react\";\nimport apiHandler from \"../api/apiHandler\";\n\nexport const StateContext = React.createContext();\n\nexport class StateProvider extends React.Component {\n  state = {\n    timers: [],\n    isLoading: true,\n  };\n\n  componentDidMount() {\n    apiHandler\n      .getAllTimers()\n      .then((data) => {\n        console.log(\"api call->>>\", data);\n        this.setState({ timers: data, isLoading: false });\n      })\n      .catch((error) => {\n        console.log(error);\n      });\n  }\n\n  createTimer = (timer) => {\n    apiHandler\n      .createOneTimer(timer)\n      .then((res) =>\n        this.setState({ timers: [...this.state.timers, res], isLoading: false })\n      )\n      .catch((error) => this.setState({ isLoading: false }));\n  };\n\n  updateTimer = (infos) => {\n    apiHandler\n      .updateOneTimer(infos.id, infos)\n      .then((data) =>\n        this.setState({\n          timers: this.state.timers.map((timer) => {\n            if (timer.id === infos.id) {\n              return Object.assign({}, timer, {\n                title: infos.title,\n                project: infos.project,\n              });\n            } else return timer;\n          }),\n          isLoading: false,\n        })\n      )\n      .catch((error) => this.setState({ isLoading: false }));\n  };\n\n  removeTimer = (timerId) => {\n    apiHandler\n      .deleteOneTimer(timerId)\n      .then(() =>\n        this.setState({\n          timers: this.state.timers.filter((t) => t.id !== timerId),\n          isLoading: false,\n        })\n      )\n      .catch((error) => this.setState({ isLoading: false }));\n  };\n\n  startTimer = (timerId) => {\n    const now = Date.now();\n    this.setState({\n      timers: this.state.timers.map((timer) => {\n        if (timer.id === timerId) {\n          return Object.assign({}, timer, {\n            runningSince: now,\n          });\n        } else return timer;\n      }),\n      isLoading: false,\n    });\n\n    const modifiedTimer = [...this.state.timers].filter(\n      (x) => x.id === timerId\n    )[0];\n    apiHandler.updateOneTimer(timerId, {\n      runningSince: modifiedTimer.runningSince,\n      elapsed: modifiedTimer.elapsed,\n    });\n  };\n\n  stopTimer = (timerId) => {\n    const now = Date.now();\n    this.setState({\n      timers: this.state.timers.map((timer) => {\n        if (timerId === timer.id) {\n          const lastElapsed = now - timer.runningSince;\n          return Object.assign({}, timer, {\n            elapsed: lastElapsed + (timer.elapsed || 0),\n            runningSince: null,\n          });\n        } else return timer;\n      }),\n      isLoading: false,\n    });\n    const modifiedTimer = [...this.state.timers].filter(\n      (x) => x.id === timerId\n    )[0];\n    apiHandler.updateOneTimer(timerId, {\n      runningSince: modifiedTimer.runningSince,\n      elapsed: modifiedTimer.elapsed,\n    });\n  };\n\n  render() {\n    const contextValue = {\n      isLoading: this.state.isLoading,\n      timers: this.state.timers,\n      createTimer: this.createTimer,\n      updateTimer: this.updateTimer,\n      removeTimer: this.removeTimer,\n      startTimer: this.startTimer,\n      stopTimer: this.stopTimer,\n    };\n\n    return (\n      <StateContext.Provider value={contextValue}>\n        {this.props.children}\n      </StateContext.Provider>\n    );\n  }\n}\n","import React, { Component } from \"react\";\n\nexport default class Loading extends Component {\n  render() {\n    return <div className=\"Loading\">The page is loading</div>;\n  }\n}\n","const millisecondsToReadable = (ms) => {\n  const seconds = Math.floor((ms / 1000) % 60);\n  const minutes = Math.floor((ms / 1000 / 60) % 60);\n  const hours = Math.floor((ms / 1000 / 60 / 60) % 60);\n\n  const readableTime = [\n    pad(hours.toString(), 2),\n    pad(minutes.toString(), 2),\n    pad(seconds.toString(), 2),\n  ].join(\":\");\n  return readableTime;\n};\n\nconst pad = (numberString, size) => {\n  let padded = numberString;\n  if (padded.length < size) padded = `0${padded}`;\n  return padded;\n};\n\nexport const renderElapsedString = (elapsed, runningSince) => {\n  let totalElapsed = elapsed;\n  if (runningSince) {\n    totalElapsed += Date.now() - runningSince;\n  }\n  return millisecondsToReadable(totalElapsed);\n};\n","import React, { Component } from \"react\";\nimport { StateContext } from \"./StateProvider\";\nimport { renderElapsedString } from \"./helpers\";\n\nimport \"@fontsource/roboto\";\nimport Button from \"@material-ui/core/Button\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\nimport EditIcon from \"@material-ui/icons/Edit\";\n\nexport class Timer extends Component {\n  static contextType = StateContext;\n\n  componentDidMount() {\n    this.forceUpdateInterval = setInterval(() => this.forceUpdate(), 500);\n  }\n\n  componentWillUnmount() {\n    clearInterval(this.forceUpdateInterval);\n  }\n\n  render() {\n    const elapsedString = renderElapsedString(\n      this.props.elapsed || 0,\n      this.props.runningSince || 0\n    );\n    return (\n      <div className=\"Timer\">\n        <div className=\"Timer__title\">{this.props.title}</div>\n        <div className=\"Timer__project\">{this.props.project}</div>\n        <div className=\"Timer__time\">{elapsedString}</div>\n        <div className=\"Timer__icons\">\n          <EditIcon className=\"Timer__icon\" onClick={this.props.openForm} />\n          <DeleteIcon\n            className=\"Timer__icon\"\n            onClick={() => this.context.removeTimer(this.props.id)}\n          />\n        </div>\n        <div className=\"Timer__startStop\">\n          {!!this.props.runningSince ? (\n            <Button\n              className=\"Timer__buttonStop\"\n              variant=\"outlined\"\n              onClick={() => this.context.stopTimer(this.props.id)}\n            >\n              Stop\n            </Button>\n          ) : (\n            <Button\n              className=\"Timer__buttonStart\"\n              variant=\"outlined\"\n              onClick={() => this.context.startTimer(this.props.id)}\n            >\n              Start\n            </Button>\n          )}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Timer;\n","import React, { Component } from \"react\";\nimport { StateContext } from \"./StateProvider\";\n\nimport \"@fontsource/roboto\";\nimport Button from \"@material-ui/core/Button\";\nimport TextField from \"@material-ui/core/TextField\";\n\nexport class TimerForm extends Component {\n  static contextType = StateContext;\n\n  state = {\n    title: this.props.title || \"\",\n    project: this.props.project || \"\",\n  };\n\n  handleChange = (e) => {\n    const key = e.target.name;\n    this.setState({ [key]: e.target.value });\n  };\n\n  handleSubmitTimerForm = () => {\n    if (this.props.submitText === \"Edit\") {\n      this.context.updateTimer({\n        id: this.props.id,\n        title: this.state.title,\n        project: this.state.project,\n      });\n      this.props.closeForm();\n    } else if (this.props.submitText === \"Create\") {\n      this.context.createTimer({\n        title: this.state.title,\n        project: this.state.project,\n      });\n      this.props.closeToggleableForm();\n    }\n  };\n\n  handleCancelTimerForm = () => {\n    this.props.submitText === \"Edit\"\n      ? this.props.closeForm()\n      : this.props.closeToggleableForm();\n  };\n\n  render() {\n    return (\n      <div className=\"TimerForm\">\n        <div className=\"TimerForm__inputs\">\n          <TextField\n            name=\"title\"\n            id=\"title\"\n            type=\"text\"\n            value={this.state.title}\n            onChange={this.handleChange}\n            label=\"Title\"\n            variant=\"outlined\"\n          />\n          <TextField\n            name=\"project\"\n            id=\"project\"\n            type=\"text\"\n            value={this.state.project}\n            onChange={this.handleChange}\n            label=\"Project\"\n            variant=\"outlined\"\n          />\n        </div>\n        <div className=\"TimerForm__buttons\">\n          <Button\n            variant=\"outlined\"\n            color=\"primary\"\n            className={this.props.submitText}\n            onClick={this.handleSubmitTimerForm}\n          >\n            {this.props.submitText}\n          </Button>\n          <Button\n            variant=\"outlined\"\n            color=\"primary\"\n            className=\"Cancel\"\n            onClick={this.handleCancelTimerForm}\n          >\n            Cancel\n          </Button>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default TimerForm;\n","import React, { Component } from \"react\";\nimport Timer from \"./Timer\";\nimport TimerForm from \"./TimerForm\";\n\nexport class EditableTimer extends Component {\n  state = {\n    editFormOpen: false,\n  };\n\n  closeForm = () => {\n    this.setState({ editFormOpen: false });\n  };\n\n  openForm = () => {\n    this.setState({ editFormOpen: true });\n  };\n\n  render() {\n    return (\n      <div>\n        {this.state.editFormOpen ? (\n          <TimerForm\n            id={this.props.id}\n            title={this.props.title}\n            project={this.props.project}\n            closeForm={this.closeForm}\n            submitText=\"Edit\"\n          />\n        ) : (\n          <Timer\n            id={this.props.id}\n            title={this.props.title}\n            project={this.props.project}\n            runningSince={this.props.runningSince}\n            elapsed={this.props.elapsed}\n            openForm={this.openForm}\n          />\n        )}\n      </div>\n    );\n  }\n}\n\nexport default EditableTimer;\n","import React, { Component } from \"react\";\nimport TimerForm from \"./TimerForm\";\nimport AddIcon from \"@material-ui/icons/Add\";\n\nexport class ToggleableTimerForm extends Component {\n  state = {\n    isOpen: false,\n  };\n\n  openToggleableForm = () => {\n    this.setState({ isOpen: true });\n  };\n\n  closeToggleableForm = () => {\n    this.setState({ isOpen: false });\n  };\n\n  render() {\n    return (\n      <div>\n        {this.state.isOpen ? (\n          <TimerForm\n            submitText=\"Create\"\n            closeToggleableForm={this.closeToggleableForm}\n          />\n        ) : (\n          <AddIcon className=\"AddIcon\" onClick={this.openToggleableForm} />\n        )}\n      </div>\n    );\n  }\n}\n\nexport default ToggleableTimerForm;\n","import React, { Component } from \"react\";\nimport EditableTimer from \"./EditableTimer\";\nimport Loading from \"./Loading\";\nimport { StateContext } from \"./StateProvider\";\nimport ToggleableTimerForm from \"./ToggleableTimerForm\";\n\nexport class EditableTimerList extends Component {\n  static contextType = StateContext;\n\n  render() {\n    if (this.context.isLoading) return <Loading />;\n\n    return (\n      <div>\n        {this.context.timers.map((timer) => {\n          return (\n            <EditableTimer\n              key={timer.id}\n              id={timer.id}\n              title={timer.title}\n              project={timer.project}\n              runningSince={timer.runningSince}\n              elapsed={timer.elapsed}\n              onFormSubmit={this.props.onFormSubmit}\n            />\n          );\n        })}\n        <ToggleableTimerForm />\n      </div>\n    );\n  }\n}\n\nexport default EditableTimerList;\n","import React, { Component } from \"react\";\nimport EditableTimerList from \"./EditableTimerList\";\nimport { StateContext } from \"./StateProvider\";\nimport Loading from \"./Loading\";\n\nclass TimersDashboard extends Component {\n  static contextType = StateContext;\n\n  render() {\n    if (this.context.isLoading) return <Loading />;\n\n    return (\n      <div>\n        <EditableTimerList onFormSubmit={this.handleEditFormSubmit} />\n      </div>\n    );\n  }\n}\n\nexport default TimersDashboard;\n","import React, { Component } from \"react\";\nimport { StateContext } from \"../components/StateProvider\";\nimport Loading from \"../components/Loading\";\nimport TimersDashboard from \"../components/TimersDashboard\";\nimport \"../styles/style.scss\";\n\nclass Home extends Component {\n  static contextType = StateContext;\n\n  render() {\n    if (this.context.isLoading) return <Loading />;\n\n    return (\n      <div>\n        <TimersDashboard />\n      </div>\n    );\n  }\n}\n\nexport default Home;\n","import React from \"react\";\nimport { Switch, Route } from \"react-router-dom\";\nimport NavMain from \"./components/NavMain\";\nimport Home from \"./pages/Home\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <NavMain />\n      <Switch>\n        <Route exact path=\"/\" component={Home}></Route>\n      </Switch>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.scss\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport { StateProvider } from \"./components/StateProvider\";\n\nReactDOM.render(\n  <BrowserRouter>\n    <React.StrictMode>\n      <StateProvider>\n        <App />\n      </StateProvider>\n    </React.StrictMode>\n  </BrowserRouter>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}